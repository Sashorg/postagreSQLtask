
Третья ЗАДАЧА:
___________________________________________________________________________________________________________
Подход похожий на вторую, только мы еще запонимаем индекс элемента и возравщаем именно её.
** допускается что функция работает только в поиске самых высоких прибылей. При смене на самые низкие запрос выдает самую низкую из тех, что присутвуют в Purcharse таблице. Это происходит из-за пустого ответа на вызовы основной функции со значениями товаров которые не были куплены ниразу. Это решается доп.кодом, но т.к задание не требует работы с минимальными значениями, я просто вербально опишу возможное решение дабы не усложнять чиатемость кода: в основной функции (расчета суммы выручки) перед вызовом запроса просто добавляем IF который будет провреять пустой ли запрос и в случае пустого автоматически возвращать нулевую выручку
___________________________________________________________________________________________________________

CREATE OR REPLACE FUNCTION get_money(j INTEGER) RETURNS INT AS
$$
DECLARE
	i record;
    r INTEGER :=0;
    res INTEGER :=0;
BEGIN
SELECT sum(price) into res from purchases INNER join items on purchases.itemid=items.itemid INNER Join users on purchases.userid=users.userid where purchases.itemid=j and EXTRACT(year from dates)=EXTRACT(YEAR FROM now());
RETURN res;
END
$$
language 'plpgsql';

___________________________________________________________________________________________________________

CREATE OR REPLACE FUNCTION get_all() RETURNS INT AS
$$
DECLARE
	i record;
    r INTEGER :=0;
    maxi INTEGER :=0;
    maxi_ind INTEGER :=0;
    cur INTEGER :=0;
BEGIN
FOR i IN SELECT itemid FROM items
LOOP
	
    cur := get_money(i.itemId);
    IF cur > maxi
	THEN
    maxi=cur;
    maxi_ind=i.itemId;
	END IF;
END LOOP;
    RETURN maxi_ind;
END
$$
language 'plpgsql';
___________________________________________________________________________________________________________

SELECT get_all();


___________________________________________________________________________________________________________
** допущения